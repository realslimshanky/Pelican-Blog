<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Shanky's Brainchild - GSoC</title><link href="https://blog.shanky.dev/" rel="alternate"></link><link href="https://blog.shanky.dev/feeds/gsoc.atom.xml" rel="self"></link><id>https://blog.shanky.dev/</id><updated>2018-08-13T00:00:00+05:30</updated><entry><title>Google Summer of Code 2018 with Debian - Final Report</title><link href="https://blog.shanky.dev/gsoc-2018-final-report.html" rel="alternate"></link><published>2018-08-13T00:00:00+05:30</published><updated>2018-08-13T00:00:00+05:30</updated><author><name>Shashank Kumar</name></author><id>tag:blog.shanky.dev,2018-08-13:/gsoc-2018-final-report.html</id><summary type="html">&lt;p&gt;Three weeks of Google Summer of Code went off to be life-changing for me. I learned a lot about soft skills and project management as well. This here is the summary of my work which also serves as my Final Report of Google Summer of Code 2018.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Three weeks of Google Summer of Code went off to be life-changing for me. This here is the summary of my work which also serves as my Final Report of Google Summer of Code 2018.&lt;/p&gt;
&lt;p&gt;&lt;img alt="GSoC and Debian" src="https://blog.shanky.dev/images/gsocanddebian.png"&gt;&lt;/p&gt;
&lt;h3&gt;Preperations&lt;/h3&gt;
&lt;p&gt;My project is &lt;strong&gt;Wizard/GUI helping students/interns apply and get started&lt;/strong&gt; and the final application is named &lt;strong&gt;New Contributor Wizard&lt;/strong&gt;. It originated as the brainchild and Project Idea of &lt;a href="https://wiki.debian.org/SummerOfCode2018/Projects/WizardForStudentsAndNewInterns"&gt;Daniel Pocock&lt;/a&gt; for GSoC 2018 under Debian. I prepared the application task for the same and shared my journey through Open Source till GSoC 2018 in two of my blogs, &lt;a href="https://blog.shanky.xyz/gsoc-2018-blog-1-from-preparations-to-debian-proposal.html#gsoc-2018-blog-1-from-preparations-to-debian-proposal"&gt;&lt;strong&gt;From Preparations to Debian to Proposal&lt;/strong&gt;&lt;/a&gt; and &lt;a href="https://blog.shanky.xyz/gsoc-2018-blog-2-the-application-task-and-results.html#gsoc-2018-blog-2-the-application-task-and-results"&gt;&lt;strong&gt;The Application Task and Results&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Project Overview&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Sign Up Screen" src="https://blog.shanky.dev/images/gsoc-final-report-application-screen-signup.png"&gt;&lt;/p&gt;
&lt;p&gt;New Contributor Wizard is a GUI application build to help new contributors get started with Open Source. It was an idea to bring together all the Tools and Tutorials necessary for a person to learn and start contributing to Open Source. The application contains different courseware sections like &lt;code&gt;Communication&lt;/code&gt;, &lt;code&gt;Version Control System&lt;/code&gt; etc. and within each section, there are respective Tools and Tutorials.&lt;/p&gt;
&lt;p&gt;A Tool is an up and running service right inside the application which can perform tasks to help the user understand the concepts. For example, encrypting a message using the primary key, decrypting the encrypted message using the private key, and so on, these tools can help the user better understand the concepts of encryption.&lt;/p&gt;
&lt;p&gt;A tutorial is comprised of lessons which contain text, images, questions and code snippets. It is a comprehensive guide for a particular concept. For example, Encryption 101, How to use git?, What is a mailing list? and so on.&lt;/p&gt;
&lt;p&gt;In addition to providing the Tools and Tutorials, this application is build to be progressive. One can easily contribute new Tutorials by just creating a JSON file, the process of which is documented in the project repository itself. Similarly, a documentation for contributing Tools is present as well.&lt;/p&gt;
&lt;h3&gt;Project Details&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;GSoC Project Page&lt;/strong&gt; - &lt;a href="https://summerofcode.withgoogle.com/projects/#5056989357408256"&gt;GSoC Projects #5056989357408256&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Project Respository&lt;/strong&gt; - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard"&gt;New Contributor Wizard on Debian Salsa&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Issue/Bug Tracker&lt;/strong&gt; - &lt;a href="https://outreach-lab.debian.net/redmine/projects/new-contributor-wizard"&gt;New Contributor Wizard on Debian Redmine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Communication&lt;/strong&gt; - Private thread with mentors for daily updates, &lt;a href="https://lists.debian.org/debian-outreach/"&gt;Debian Outreach Mailing List&lt;/a&gt; for weekly updates and &lt;a href="https://meet.jit.si"&gt;Jitsi Meet&lt;/a&gt; for conference calls.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Programming Language and Tools&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;For Development&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.python.org"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kivy.org/docs"&gt;Kivy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.python-requests.org/en/master"&gt;Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pythonhosted.org/python-gnupg"&gt;Python GnuPG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.cython.org/en/latest"&gt;Cython&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;For Testing&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pylint.readthedocs.io/en/latest"&gt;Pylint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.pytest.org/en/latest"&gt;Pytest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pytest-cov.readthedocs.io/en/latest"&gt;Pytest-cov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gotcha/ipdb"&gt;IPDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Environment&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.pipenv.org/"&gt;Pipenv&lt;/a&gt; for Python Virtual Environment&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.debian.org/DebianStretch"&gt;Debian 9&lt;/a&gt; for Project Development and testing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Version Control System&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For pinned dependencies and sub-dependencies one can have a look at the &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/master/Pipfile"&gt;Pipfile&lt;/a&gt; and &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/master/Pipfile.lock"&gt;Pipfile.lock&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;My Contributions&lt;/h3&gt;
&lt;p&gt;The project was just an idea before GSoC and I had to make all the decisions for the implementation with the help of mentors whether it was Design or Architecture of the application. Below is the list of my contributions in shape of merge requests and every merge request contains UI, application logic, tests, and documentation. My contributions can also be seen in &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/master/changelog"&gt;&lt;strong&gt;Changelog&lt;/strong&gt;&lt;/a&gt; and &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/graphs/master"&gt;&lt;strong&gt;Contribution Graph&lt;/strong&gt;&lt;/a&gt; of the application.&lt;/p&gt;
&lt;h5&gt;Sign Up&lt;/h5&gt;
&lt;p&gt;Sign Up is the first screen a user is shown and asks for all the information required to create an account. It then takes the user to the Dashboard with all the courseware sections.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Merge request&lt;/strong&gt; - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/4"&gt;Adds SignUp feature&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redmine Issue&lt;/strong&gt; - &lt;a href="https://outreach-lab.debian.net/redmine/issues/8"&gt;Create SignUp Feature&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feature In Action&lt;/strong&gt; (updated working of the feature)&lt;/p&gt;
&lt;video width="400" controls loop&gt;
  &lt;source src="https://blog.shanky.dev/videos/GSoC_final_signup.mp4" type="video/mp4"&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;

&lt;h5&gt;Sign In&lt;/h5&gt;
&lt;p&gt;Alternate to Sign Up, the user has option to select Sign In to use existing account in order to access the application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Merge Request&lt;/strong&gt; - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/5"&gt;Adds SignIn feature&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redmine Issue&lt;/strong&gt; - &lt;a href="https://outreach-lab.debian.net/redmine/issues/9"&gt;Create SignIn Feature&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feature In Action&lt;/strong&gt; (updated working of the feature)&lt;/p&gt;
&lt;video width="400" controls loop&gt;
  &lt;source src="https://blog.shanky.dev/videos/GSoC_final_signin.mp4" type="video/mp4"&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;

&lt;h5&gt;Dashboard&lt;/h5&gt;
&lt;p&gt;The Dashboard is said to be the protagonist screen of the application. It contains all the courseware sessions and their respective Tools and Tutorials.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Merge Request&lt;/strong&gt; - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/6"&gt;Adds Dashboard feature&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redmine Issue&lt;/strong&gt; - &lt;a href="https://outreach-lab.debian.net/redmine/issues/25"&gt;Implementing Dashboard&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feature In Action&lt;/strong&gt; (updated working of the feature)&lt;/p&gt;
&lt;video width="400" controls loop&gt;
  &lt;source src="https://blog.shanky.dev/videos/GSoC_final_dashboard.mp4" type="video/mp4"&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;

&lt;h5&gt;Adding Tool Architecture&lt;/h5&gt;
&lt;p&gt;Every courseware section can have respective Tools and Tutorials. To add Tools to a section I devised an architecture and implemented on &lt;code&gt;Encryption&lt;/code&gt; to add 4 different Tools. They are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create Key Pair&lt;/li&gt;
&lt;li&gt;Display and manage Key Pair&lt;/li&gt;
&lt;li&gt;Encrypt a message&lt;/li&gt;
&lt;li&gt;Decrypt a message&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Merge Request&lt;/strong&gt; - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/7"&gt;Adding encryption tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redmine Issue&lt;/strong&gt; - &lt;a href="https://outreach-lab.debian.net/redmine/issues/28"&gt;Adding Encryption Tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feature In Action&lt;/strong&gt; (updated working of the feature)&lt;/p&gt;
&lt;video width="400" controls loop&gt;
  &lt;source src="https://blog.shanky.dev/videos/GSoC_final_encryption_tools.mp4" type="video/mp4"&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;

&lt;h5&gt;Adding Tutorial Architecture&lt;/h5&gt;
&lt;p&gt;Similar to Tools, Tutorials can be found with respect to any courseware section. I have created a Tutorial Parser, which can take a JSON file and build GUI for the Tutorial easily without any coding required. This way folks can easily contribute Tutorials to the project. I added &lt;code&gt;Encryption 101&lt;/code&gt; Tutorial to showcase the use of Tutorial Parser.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Merge Request&lt;/strong&gt; - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/9"&gt;Adding encryption tutorials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redmine Issue&lt;/strong&gt; - &lt;a href="https://outreach-lab.debian.net/redmine/issues/31"&gt;Adding Encryption Tutorials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feature In Action&lt;/strong&gt; (updated working of the feature)&lt;/p&gt;
&lt;video width="400" controls loop&gt;
  &lt;source src="https://blog.shanky.dev/videos/GSoC_final_encryption_tutorials.mp4" type="video/mp4"&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;

&lt;h5&gt;Adding 'Invite Contributor' block to Tools and Tutorials&lt;/h5&gt;
&lt;p&gt;In order to invite the contributor to New Contributor Wizard, every Tools and Tutorials menu display an additional block by linking the project repository.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Merge Request&lt;/strong&gt; - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/10"&gt;Inviting contributors&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redmine Issue&lt;/strong&gt; - &lt;a href="https://outreach-lab.debian.net/redmine/issues/54"&gt;Inviting contributors to the project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feature In Action&lt;/strong&gt; (updated working of the feature)&lt;/p&gt;
&lt;video width="400" controls loop&gt;
  &lt;source src="https://blog.shanky.dev/videos/GSoC_final_invite_contributors.mp4" type="video/mp4"&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;

&lt;h5&gt;Adding How To Use&lt;/h5&gt;
&lt;p&gt;One of the courseware section &lt;code&gt;How To Use&lt;/code&gt; help the user understand about different sections of the application in order to get the best out of it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Merge Request&lt;/strong&gt; - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/15"&gt;Updating How To Use&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redmine Issue&lt;/strong&gt; - &lt;a href="https://outreach-lab.debian.net/redmine/issues/53"&gt;Adding How To Use in the application &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feature In Action&lt;/strong&gt; (updated working of the feature)&lt;/p&gt;
&lt;video width="400" controls loop&gt;
  &lt;source src="https://blog.shanky.dev/videos/GSoC_final_how_to_use.mp4" type="video/mp4"&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;

&lt;h5&gt;Adding description to all the modules&lt;/h5&gt;
&lt;p&gt;All the courseware sections or modules need a simple description to describe what the user will learn using it's Tutorials and Tools.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Merge Request&lt;/strong&gt; - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/20"&gt;Description added to all the modules&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redmine Issue&lt;/strong&gt; - &lt;a href="https://outreach-lab.debian.net/redmine/issues/57"&gt;Add a introduction/description to all the modules&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feature In Action&lt;/strong&gt; (updated working of the feature)&lt;/p&gt;
&lt;video width="400" controls loop&gt;
  &lt;source src="https://blog.shanky.dev/videos/GSoC_final_description_to_all_modules.mp4" type="video/mp4"&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;

&lt;h5&gt;Adding Generic Tools and Tutorials Menu&lt;/h5&gt;
&lt;p&gt;This feature allows the abstraction of Tools and Tutorials architecture I mentioned earlier so that the Menu architecture can be used by any of the courseware sections following the DRY approach.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Merge Request&lt;/strong&gt; - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/13"&gt;Adding Generic Menu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redmine Issue&lt;/strong&gt; - &lt;a href="https://outreach-lab.debian.net/redmine/issues/49"&gt;Adding Tutorial and Tools menu to all the modules&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Tutorial Contribution Doc&lt;/h5&gt;
&lt;p&gt;A tutorial in the application can be added using just a JSON file. As mentioned earlier, it is made possible using the Tutorial Parser. A comprehensive ocumentation is added to help the users understand how they can contribute Tutorials to the application for the world to take advantage of.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Merge Request&lt;/strong&gt; - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/16"&gt;Tutorial contribution docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redmine Issue&lt;/strong&gt; - &lt;a href="https://outreach-lab.debian.net/redmine/issues/45"&gt;Add documentation for Tutorial development&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Tools Contribution Doc&lt;/h5&gt;
&lt;p&gt;A tool in the application is build using Kivy lang and Python. A comprehensive documentation is added to the project in order for folks to contribute Tools for the world to take advantage of.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Merge Request&lt;/strong&gt; - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/17"&gt;Tools contribution docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redmine Issue&lt;/strong&gt; - &lt;a href="https://outreach-lab.debian.net/redmine/issues/44"&gt;Add documentation for Tools development&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Adding a License to project&lt;/h5&gt;
&lt;p&gt;After having discussions with the mentors and a bit of research, GNU GPLv3 was finalized as the license for the project and has been added to the repository.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Merge Request&lt;/strong&gt; - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/11"&gt;Adds License to project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redmine Issue&lt;/strong&gt; - &lt;a href="https://outreach-lab.debian.net/redmine/issues/10"&gt;Add a license to Project Repository&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Allowing different timezones during Sign Up&lt;/h5&gt;
&lt;p&gt;Sign Up feature is refactored to support different timezones from the user.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Merge Request&lt;/strong&gt; - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/18"&gt;Allowing different timezones during signup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redmine Issue&lt;/strong&gt; - &lt;a href="https://outreach-lab.debian.net/redmine/issues/56"&gt;Allow different timezones&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;All other contributions&lt;/h5&gt;
&lt;p&gt;Here's a list of all the merge request I raised to develop a feature or fix an issue with the application - &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests?scope=all&amp;amp;utf8=%E2%9C%93&amp;amp;state=all&amp;amp;author_username=realslimshanky-guest"&gt;All merge request by Shashank Kumar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here are all the issues/bug/features I created, resolved or was associated to on the Redmine - &lt;a href="https://outreach-lab.debian.net/redmine/projects/new-contributor-wizard/issues?utf8=%E2%9C%93&amp;amp;set_filter=1&amp;amp;f%5B%5D=status_id&amp;amp;op%5Bstatus_id%5D=o&amp;amp;f%5B%5D=assigned_to_id&amp;amp;op%5Bassigned_to_id%5D=%3D&amp;amp;v%5Bassigned_to_id%5D%5B%5D=8&amp;amp;f%5B%5D=&amp;amp;c%5B%5D=tracker&amp;amp;c%5B%5D=status&amp;amp;c%5B%5D=priority&amp;amp;c%5B%5D=subject&amp;amp;c%5B%5D=assigned_to&amp;amp;c%5B%5D=updated_on&amp;amp;group_by=&amp;amp;t%5B%5D="&gt;All the redmine issue associated to Shashank Kumar&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Packaging&lt;/h3&gt;
&lt;p&gt;The application has been packaged for PyPi and can be installed using either &lt;code&gt;pip&lt;/code&gt; or &lt;code&gt;pipenv&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Package - &lt;a href="https://pypi.org/project/new-contributor-wizard/"&gt;new-contributor-wizard&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Packaging Tool - &lt;a href="https://pypi.org/project/setuptools/"&gt;setuptools&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;To Do List&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://outreach-lab.debian.net/redmine/issues/59"&gt;Add more tools and tutorials to the project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://outreach-lab.debian.net/redmine/issues/55"&gt;GUI popup for text manipulation in input boxes throughout the application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://outreach-lab.debian.net/redmine/issues/60"&gt;Packaging the application for Debian after the Kivy package for python3 is upgraded&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Weekly Updates And Reports&lt;/h3&gt;
&lt;p&gt;These report were send daily to private mentors mail thread and weekly on Debian Outreach mailing list.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lists.debian.org/debian-outreach/2018/05/msg00069.html"&gt;Week 1 and 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://salsa.debian.org/snippets/126"&gt;Week 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://salsa.debian.org/snippets/127"&gt;Week 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://salsa.debian.org/snippets/128"&gt;Week 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://salsa.debian.org/snippets/129"&gt;Week 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://salsa.debian.org/snippets/130"&gt;Week 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://salsa.debian.org/snippets/131"&gt;Week 8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://salsa.debian.org/snippets/132"&gt;Week 9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://salsa.debian.org/snippets/133"&gt;Week 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://salsa.debian.org/snippets/134"&gt;Week 11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://salsa.debian.org/snippets/135"&gt;Week 12&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Talk Delivered On My GSoC Project&lt;/h3&gt;
&lt;p&gt;On 12th August 2018, I gave a talk on &lt;strong&gt;How my Google Summer of Code project can help bring new contributors to Open Source&lt;/strong&gt; during a meetup in Hacker Space, Noida, India. Here are the &lt;a href="https://slides.com/realslimshanky/gsoc"&gt;slides&lt;/a&gt; I prepared for my talk and a collection of &lt;a href="https://drive.google.com/folderview?id=1Dcpbw0QsmW8OL8B5XYbmov83A7k8dbeM"&gt;photographs&lt;/a&gt; of the event.&lt;/p&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;New Contributor Wizard is ready for the users who would like to get started with Open Source as well as to the folks who would like to contribute Tools and Tutorials to the application as well.&lt;/p&gt;
&lt;h3&gt;Acknowledgment&lt;/h3&gt;
&lt;p&gt;I would like to thank Google Summer of Code for giving me the opportunity of giving back to the community and Debian for selecting me for the project.&lt;/p&gt;
&lt;p&gt;I would like to thank &lt;a href="https://danielpocock.com/"&gt;Daniel Pocock&lt;/a&gt; for his amazing blogs and ideas he comes up which end up inspiring students and result in a project like above.&lt;/p&gt;
&lt;p&gt;I would like to thank &lt;a href="https://www.sanyamkhurana.com/"&gt;Sanyam Khurana&lt;/a&gt; for constantly motivating me by reviewing every single line of code which I wrote to come up with the best solution to put in front of the community.&lt;/p&gt;
&lt;p&gt;Thanks to all the loved ones who always believed in me and kept me motivated.&lt;/p&gt;</content><category term="GSoC"></category><category term="GSoC"></category><category term="Google"></category><category term="Debian"></category><category term="KIVY"></category><category term="Salsa"></category></entry><entry><title>Google Summer of Code 2018 with Debian - Week 5</title><link href="https://blog.shanky.dev/gsoc-2018-week-5.html" rel="alternate"></link><published>2018-06-20T00:00:00+05:30</published><updated>2018-06-20T00:00:00+05:30</updated><author><name>Shashank Kumar</name></author><id>tag:blog.shanky.dev,2018-06-20:/gsoc-2018-week-5.html</id><summary type="html">&lt;p&gt;Following reviews by my mentor Sanyam, I had to refactor most of my code on all the merge requests. This was a week of understanding how we write code is as important as what we code!&lt;/p&gt;</summary><content type="html">&lt;p&gt;During week 5, there were 3 merge requests undergoing review process simultaneously. I learned a lot about how code should be written in order to assist the reader since the code is read more times than the time it is written.&lt;/p&gt;
&lt;h3&gt;Services and Utility&lt;/h3&gt;
&lt;p&gt;After the user has entered their information on the signin or signup screen, the job of querying the database was given to a module named &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/2e0c54258641f45e72d6d16b23fc0977c2012eec/modules/signup/updatedb.py"&gt;updatedb&lt;/a&gt;. The job of &lt;code&gt;updatedb&lt;/code&gt; was to clean user input, hash password, query the database and respond with appropriate result after the database query is executed. In a discussion with Sanyam, he said &lt;code&gt;updatedb&lt;/code&gt; doesn't conform to its name with what functions it incorporated. And explained the virtue of Service and Utility modules/functions and that this is the best place to restructure code with the same.&lt;/p&gt;
&lt;p&gt;Utility functions can be described roughly as the functions which perform some operations on the data without caring much about the relationship of the data with respect to the application. So, generating uuid, cleaning email address, cleaning full name and hashing password becomes out utility functions and can be seen in &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/7d852bdbd12c932770b2d0ade704c36ce2099eed/modules/signup/utils.py"&gt;utils.py&lt;/a&gt; for signup and similarly for &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/45d3eb1567343501993cf5b7b1bd3239daf34629/modules/signin/utils.py"&gt;signin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Service functions can be described roughly as the functions which while performing operations on the data take their relationship with the application into account. Hence, these functions are not generic and application specific. &lt;code&gt;sign_up_user&lt;/code&gt; is one such service function which received user information, calls utility functions to modify that information, query the database with respect to the signup operation i.e. adding the new user's detail to the database or raise &lt;code&gt;SignUpError&lt;/code&gt; if details are already present. This can be seen in &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/7d852bdbd12c932770b2d0ade704c36ce2099eed/modules/signup/services.py"&gt;services&lt;/a&gt; module for signup and &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/45d3eb1567343501993cf5b7b1bd3239daf34629/modules/signin/services.py"&gt;signin&lt;/a&gt; as well.&lt;/p&gt;
&lt;h3&gt;Persisting database connection&lt;/h3&gt;
&lt;p&gt;This is how the connection to the database used to work before the review. The &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/e21bf62537650c3dca610f459d6099032ba156db/settings.py"&gt;settings&lt;/a&gt; module used to create the connection to the database, create table schema if not present and close the connection. Few constants are saved in the module to be used by signup and signin in order to connect to the database. But, the problem is, now database connection has to be established everytime there's a query to be executed by the services of signup or signin. Since the sqlite3 database is saved in a file alongside the application, I though it'll not be a problem to make connection whenever needed. But it overhead on the OS now which can slow down the application when scaled. To resolve this, now &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/7d852bdbd12c932770b2d0ade704c36ce2099eed/settings.py"&gt;settings&lt;/a&gt; return the connection object which can be used again in any other module.&lt;/p&gt;
&lt;h3&gt;Integrating SignUp with Dashboard&lt;/h3&gt;
&lt;p&gt;While the SignUp feature was being reviewed the Dashbaord was &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/6"&gt;merged&lt;/a&gt; and I had to refactor SignUp &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/4"&gt;merge request&lt;/a&gt; accordingly. The natural flow of this should be the SignUp being the default screen up on the UI and after successful signup operation the Dashboard should be displayed. To achieve such a flow, I used &lt;a href="https://kivy.org/docs/api-kivy.uix.screenmanager.html"&gt;screen manager&lt;/a&gt; which handles different screens and transition between them with predefined animation. This is defined in &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/7d852bdbd12c932770b2d0ade704c36ce2099eed/main.py"&gt;main&lt;/a&gt; module and the entire flow can be seen in action below.&lt;/p&gt;
&lt;video width="400" controls&gt;
  &lt;source src="https://blog.shanky.dev/videos/gsoc_sign_in_integrated_with_dashboard.mp4" type="video/mp4"&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;

&lt;h3&gt;Designing Tutorials and Tools menu&lt;/h3&gt;
&lt;p&gt;Once user is on the Dashboard, they have an option of picking up from different modules and going through the tutorials and tools available in the respective modules. The idea is to display difficulty tip as well so it becomes easier for the user to begin. Hence, below is what I've designed in order to incorporate the same.&lt;/p&gt;
&lt;p&gt;&lt;img alt="New Contributor Wizard - Tutorials and Tools Menu" src="https://blog.shanky.dev/images/NewContributorWizardTutorialsAndTools.png"&gt;&lt;/p&gt;
&lt;h3&gt;Implementing Tutorials and Tools menu&lt;/h3&gt;
&lt;p&gt;Now comes the fun part, thinking about the architecture of the modules just designed in order for them to take shape of some code in the application. The idea here is to define them in a &lt;code&gt;json&lt;/code&gt; file to be picked from the respective module afterwards. This way it'll be easier to add new tutorials and tools and hence we have this resultant &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/1fde26caae27219ee359071ef7ac001a7377e658/data/root.json"&gt;json&lt;/a&gt;. The developement of this feature can be followed on this &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/7"&gt;merge request&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now remains the quest to design and implement the structure of tutorials which can be generalized in a way that it can be populated using a json file. This will provide flexibility to the developer of tutorials and a UI module can also be implemented to modify this json to add new tutorials without even knowing how to code. Sounds amazing right? We'll see how it works out soon. If you have any suggestions this make sure to comment down below, on the merge request or reach out to me.&lt;/p&gt;
&lt;h3&gt;The Conclusion&lt;/h3&gt;
&lt;p&gt;Since the SignUp has also been merged I'll have to refactor SignIn now to integrate all of it in one happy application and complete the natural flow of things. Also, the design and development of tools/tutorials is underway and by the next blog is out you might be able to test the application with atleast one tool or tutorial from one of the modules on the dashboard.&lt;/p&gt;</content><category term="GSoC"></category><category term="GSoC"></category><category term="Google"></category><category term="Debian"></category><category term="KIVY"></category></entry><entry><title>Google Summer of Code 2018 with Debian - Week 4</title><link href="https://blog.shanky.dev/gsoc-2018-week-4.html" rel="alternate"></link><published>2018-06-12T00:00:00+05:30</published><updated>2018-06-12T00:00:00+05:30</updated><author><name>Shashank Kumar</name></author><id>tag:blog.shanky.dev,2018-06-12:/gsoc-2018-week-4.html</id><summary type="html">&lt;p&gt;The designs which I created for Sign Up, Sign In and Dashboard during the first couple of weeks saw the light of code this week. The learning curve for KIVY was steep but now I can deploy a feature every couple of days. Here's how!&lt;/p&gt;</summary><content type="html">&lt;p&gt;After working on &lt;a href="https://blog.shanky.xyz/gsoc-2018-week-1-and-2.html"&gt;designs&lt;/a&gt; and getting my hands dirty with &lt;a href="https://blog.shanky.xyz/gsoc-2018-week-3.html"&gt;KIVY&lt;/a&gt; for the first 3 weeks, I became comfortable with my development environment and was able to deliver features within a couple of days with UI, tests, and documentation. In this blog, I explain how I converted &lt;strong&gt;all&lt;/strong&gt; my Designs into Code and what I've learned along the way.&lt;/p&gt;
&lt;h3&gt;The Sign Up&lt;/h3&gt;
&lt;p&gt;&lt;img alt="New Contributor Wizard - SignUp" src="https://blog.shanky.dev/images/NewContributorWizardSignUp.png"&gt;&lt;/p&gt;
&lt;p&gt;In order to implement above design in KIVY, the best way is to write a user kv-lang. It involves writing a kv file which contains widget tree of the layout and a lot more. One can learn more about kv-lang from the &lt;a href="https://kivy.org/docs/guide/lang.html"&gt;documentation&lt;/a&gt;. To begin with, let us look at the simplest kv file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;BoxLayout&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;World&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h6&gt;KV Language&lt;/h6&gt;
&lt;p&gt;In KIVY, in order to build UI widgets are used. Also, &lt;code&gt;widget&lt;/code&gt; base class is what is derived to create all other UI elements like layouts, button, label and so on in KIVY. Indentation is used in kv just like in Python to define children. In our kv file above, we're using &lt;code&gt;BoxLayout&lt;/code&gt; which allows us to arrange all its children in either horizontal(by default) or vertical orientation. So, both the &lt;code&gt;Label&lt;/code&gt;s will be oriented horizontally one after another.&lt;/p&gt;
&lt;p&gt;Just like children widgets, one can also set values to properties like &lt;code&gt;Hello&lt;/code&gt; to &lt;code&gt;text&lt;/code&gt; of the first &lt;code&gt;Label&lt;/code&gt; in above code. More information about what properties can be defined for &lt;a href="https://kivy.org/docs/api-kivy.uix.boxlayout.html"&gt;&lt;code&gt;BoxLayout&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://kivy.org/docs/api-kivy.uix.label.html"&gt;&lt;code&gt;Label&lt;/code&gt;&lt;/a&gt; can be seen from their &lt;a href="https://kivy.org/docs/api-kivy.html"&gt;API documentaion&lt;/a&gt;. All which remains is importing this &lt;code&gt;.kv&lt;/code&gt; (say &lt;code&gt;sample.kv&lt;/code&gt;) file from your module which runs KIVY app. You might notice that for now &lt;code&gt;Language&lt;/code&gt; and &lt;code&gt;Timezone&lt;/code&gt; are kept static. The reason is, Language support architecture is yet to be finalized and both the options would require a &lt;a href="https://kivy.org/docs/api-kivy.uix.dropdown.html"&gt;Drop Down list&lt;/a&gt;, design and implementation for which will be handled separately.&lt;/p&gt;
&lt;p&gt;In order for me to build the UI following the design, I had to experiment with widgets. When all was done, &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/ef00a0d18220ec9597387b95871ae687e23bff1c/ui/signup.kv"&gt;&lt;code&gt;signup.kv&lt;/code&gt;&lt;/a&gt; file contained the resultant UI.&lt;/p&gt;
&lt;h6&gt;Validations&lt;/h6&gt;
&lt;p&gt;Now, the good part is we have a UI, the user can input data. And the bad part is user can input any data! So, it's very important to validate whether the user is submitting data in the correct format or not. Specifically for Sign Up module, I had to validate Email, Passwords and Full Name submitted by the user. Validation module can be found &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/ef00a0d18220ec9597387b95871ae687e23bff1c/modules/signup/validations.py"&gt;here&lt;/a&gt; which contains classes and methods for what I intended to do.&lt;/p&gt;
&lt;p&gt;It's important that user gets feedback after validation if something is wrong with the input. This is done by exchanging the Label's text with error message and color with bleeding red by calling &lt;code&gt;prompt_error_message&lt;/code&gt; for unsuccessful validation.&lt;/p&gt;
&lt;h6&gt;Updating The Database&lt;/h6&gt;
&lt;p&gt;After successful validation, Sign Up module steps forward to update the database in &lt;code&gt;sqlite3&lt;/code&gt; module. But before that, Email and Full Name is cleaned for any unnecessary whitespaces, tabs and newline characters. &lt;a href="https://en.wikipedia.org/wiki/UUID"&gt;Universally unique identifier&lt;/a&gt; or uuid is generated for the &lt;code&gt;user_id&lt;/code&gt;. Plain text Password in changed to sha256 hash string for security. Finally, &lt;code&gt;sqlite3&lt;/code&gt; is integrated to &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/ef00a0d18220ec9597387b95871ae687e23bff1c/modules/signup/updatedb.py"&gt;&lt;code&gt;updatedb.py&lt;/code&gt;&lt;/a&gt; to update the database. SQlite database is stored in a single file and named &lt;code&gt;new_contributor_wizard.db&lt;/code&gt;. For user information, the table named &lt;code&gt;USERS&lt;/code&gt; is created if not present during initialization of &lt;code&gt;UpdateDB&lt;/code&gt; instance. Finally, information is stored or error is returned if the Email already exists. This is how the &lt;code&gt;USERS&lt;/code&gt; schema looks like.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;id VARCHAR(36) PRIMARY KEY,
email UNIQUE,
pass VARCHAR(64),
fullname TEXT,
language TEXT,
timezone TEXT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After the Database is updated, i.e. successful account creation of user, the natural flow is to take the user to the Dashboard screen. In order to make this feature atomic, integration with Dashboard would be done once all 3 (SignUp, SignIn, and Dashboard) features are merged. So, in order to showcase successful sign-up, I've used text confirmation. Below is the screencast of how the feature looks and what changes it makes in the database.&lt;/p&gt;
&lt;video width="400" controls&gt;
  &lt;source src="https://blog.shanky.dev/videos/gsoc_signup_feature.mp4" type="video/mp4"&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;

&lt;h3&gt;The Sign In&lt;/h3&gt;
&lt;p&gt;&lt;img alt="New Contributor Wizard - SignIn" src="https://blog.shanky.dev/images/NewContributorWizardLogIn.png"&gt;&lt;/p&gt;
&lt;p&gt;If you look into the difference in UI of SignIn module in comparison with the SignUp, you might notice a few changes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;New Contributor Wizard&lt;/code&gt; is now right-aligned&lt;/li&gt;
&lt;li&gt;Instead of 2 columns taking user information, here we have just one with &lt;code&gt;Email&lt;/code&gt; and &lt;code&gt;Password&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hence, the UI experiences only a little change and the result can be seen in &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/a2f3a520d43a2efee016e24bcc5d64decfd509d5/ui/signin.kv"&gt;&lt;code&gt;singin.py&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;Validations&lt;/h6&gt;
&lt;p&gt;Just like in the Sign Up modules, we are not trusting user's input to be sane. Hence, we validate whether the user is giving us a good format Email and Password. The resultant validations of Sign In modules can be seen in &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/a2f3a520d43a2efee016e24bcc5d64decfd509d5/modules/signin/validations.py"&gt;&lt;code&gt;validations.py&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;Updating The Database&lt;/h6&gt;
&lt;p&gt;After successful validation, next step would be cleaning Email and hashing the Password entered by the user. Here we have two possibilities of unsuccessful signin,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Either the Email entered by the user doesn't exist in the database&lt;/li&gt;
&lt;li&gt;Or the Password entered by the user is not correct&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Else, the user is signed in successfully. For the unsuccessful signin, I have created a &lt;code&gt;exceptions.py&lt;/code&gt; module to prompt the error correctly. &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/a2f3a520d43a2efee016e24bcc5d64decfd509d5/modules/signin/updatedb.py"&gt;&lt;code&gt;updatedb.py&lt;/code&gt;&lt;/a&gt; contains the database operations for Sign In module.&lt;/p&gt;
&lt;h5&gt;The Exceptions&lt;/h5&gt;
&lt;p&gt;&lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/a2f3a520d43a2efee016e24bcc5d64decfd509d5/modules/signin/exceptions.py"&gt;&lt;code&gt;Exceptions.py&lt;/code&gt;&lt;/a&gt; of Sign In contains Exception classes and they are defined as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UserError - this class is used to throw an exception when Email doesn't exist&lt;/li&gt;
&lt;li&gt;PasswordError - this class is used to throw an exception when Password doesn't match the one saved in the database with the corresponding email.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All these modules are integrated with &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/a2f3a520d43a2efee016e24bcc5d64decfd509d5/modules/signin/signin.py"&gt;&lt;code&gt;signin.py&lt;/code&gt;&lt;/a&gt; and the resultant feature can be seen in action in the screencast below. Also, here's the &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/5"&gt;merge request&lt;/a&gt; for the same.&lt;/p&gt;
&lt;video width="400" controls&gt;
  &lt;source src="https://blog.shanky.dev/videos/gsoc_signin_feature.mp4" type="video/mp4"&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;

&lt;h3&gt;The Dashboard&lt;/h3&gt;
&lt;p&gt;&lt;img alt="New Contributor Wizard - Dashboard" src="https://blog.shanky.dev/images/NewContributorWizardDashboard.png"&gt;&lt;/p&gt;
&lt;p&gt;The Dashboard is completely different than the above two modules. If New Contributor Wizard is the culmination of different user stories and interactive screen then Dashboard is the protagonist of all the other features. A successful SignIn or SignUp will direct the user to the Dashboard. All the tutorials and tools will be available to the user henceforth.&lt;/p&gt;
&lt;h5&gt;The UI&lt;/h5&gt;
&lt;p&gt;There are 2 segments of the Dashboard screen, one is for all the menu options on the left and another is for the tutorials and tools for the selected menu option on the right. So, it was needed to change the screen on the right all the time while selecting the menu options. KIVY provides a widget named &lt;a href="https://kivy.org/docs/api-kivy.uix.screenmanager.html"&gt;&lt;code&gt;Screen Manager&lt;/code&gt;&lt;/a&gt; to manage such an issue gracefully. But in order to have control over the transition of just a part of the screen rather than the entire screen, one has to dig deep into the API and work it out. Here's when I remembered a sentence from the &lt;a href="https://www.python.org/dev/peps/pep-0020/"&gt;Zen of Python&lt;/a&gt;, "Simple is better than complex" and I chose the simple way of changing the screen i.e. by adding/removing widget functions.&lt;/p&gt;
&lt;p&gt;In the &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/9f57525706c068a1963c9b887c1b742837d50532/modules/dashboard/dashboard.py"&gt;&lt;code&gt;dashboard.py&lt;/code&gt;&lt;/a&gt;, I'm overidding &lt;code&gt;on_touch_down&lt;/code&gt; function to check which menu option the user clicks on and calling &lt;code&gt;enable_menu&lt;/code&gt; accordingly.&lt;/p&gt;
&lt;p&gt;The menu options on the left are not the &lt;code&gt;Button&lt;/code&gt; widget. I had an option of using the &lt;code&gt;Button&lt;/code&gt; directly but it would need customization to make them look pretty. Instead, I used &lt;code&gt;BoxLayout&lt;/code&gt; and &lt;code&gt;Label&lt;/code&gt; to incorporate a button like feature. In &lt;code&gt;enable_menu&lt;/code&gt; I only check on top of which option user is clicking using the &lt;code&gt;touch&lt;/code&gt; API. Now, all I have to do is highlight the selected option and unfocus all the other options. The final UI can be seen here in &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/blob/9f57525706c068a1963c9b887c1b742837d50532/ui/dashboard.kv"&gt;&lt;code&gt;dashboard.kv&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;Courseware&lt;/h5&gt;
&lt;p&gt;Along with highlighting the selected option, Dashboard also changes to the courseware i.e. tools and tutorials for the selected option on the right. To provide a modular structure to application, all these options are build as separate modules and then integrated into the Dashboard. Here are all the modules for the courseware build for the Dashboard,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blog&lt;/code&gt; - Users will be given tools to create and deploy their blogs and also learn the best practices.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cli&lt;/code&gt; - Understanding Command Line Interface will be the goal with all the tutorials provided in this module.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;communication&lt;/code&gt; - Communication module will have tutorials for IRC and mailing lists and showcase best communication practices. The tools in this module will help user subscribe to the mailing lists of different open source communities.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;encryption&lt;/code&gt; - Encrypting communication and data will be tough using this module.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;how_to_use&lt;/code&gt; - This would be an introductory module for the user for them to understand how to user this application.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vcs&lt;/code&gt; - Version Control Systems like git is important while working on a project whether personal or with a team and everything in between.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;way_ahead&lt;/code&gt; - This module will help users reach out to different open source communities and organizations. It will also showcase open source project to the user with respect to their preference and information about programs like Google Summer of Code and Outreachy.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;Settings&lt;/h5&gt;
&lt;p&gt;Below the menu are the options for settings. These settings also have separate modules just like courseware. Specifically, they are described as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;application_settings&lt;/code&gt; - Would help out user to manage setting which are specific to KIVY application like resolutions.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;theme_settings&lt;/code&gt; - User can manage theme related setting like color schema using this option&lt;/li&gt;
&lt;li&gt;&lt;code&gt;profile_settings&lt;/code&gt; - Would help the user manage information about themselves&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/6"&gt;merge request&lt;/a&gt; which incorporates the Dashboard feature in the project can be seen in action in the screencast below.&lt;/p&gt;
&lt;video width="400" controls&gt;
  &lt;source src="https://blog.shanky.dev/videos/gsoc_dashboard_feature.mp4" type="video/mp4"&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;

&lt;h3&gt;The Conclusion&lt;/h3&gt;
&lt;p&gt;The week 4 was a bit satisfying for me as I felt like adding value to the project with these merge requests. As soon as the merge requests are reviewed and merged in the repository, I'll work on integrating all these features together to create a seamless experience as it should be for the user. There are few necessary modifications to be made in the features like supporting multiple languages and adding the gradient to the background as it can be seen in the &lt;a href="https://blog.shanky.xyz/gsoc-2018-week-1-and-2.html#gsoc-2018-week-1-and-2"&gt;design&lt;/a&gt;. I'll create issues on &lt;a href="https://outreach-lab.debian.net/redmine/projects/new-contributor-wizard"&gt;redmine&lt;/a&gt; for the same and will work on them as soon as integration is done. My next task would be designing how tutorials and tasks would look in the right segment of the Dashboard.&lt;/p&gt;</content><category term="GSoC"></category><category term="GSoC"></category><category term="Google"></category><category term="Debian"></category><category term="KIVY"></category></entry><entry><title>Google Summer of Code 2018 with Debian - Week 3</title><link href="https://blog.shanky.dev/gsoc-2018-week-3.html" rel="alternate"></link><published>2018-06-04T00:00:00+05:30</published><updated>2018-06-05T00:00:00+05:30</updated><author><name>Shashank Kumar</name></author><id>tag:blog.shanky.dev,2018-06-04:/gsoc-2018-week-3.html</id><summary type="html">&lt;p&gt;Third week of GSoC was all about working on the code and it's quality. It's the first time I started using KIVY and here's how it went.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Coming to the third week of GSoC felt like it was part of the daily schedule since ever. Daily updates to mentors, reviews, and evaluations on merge/pull requests and constant learning process kept my schedule full of adrenalin. Here's what I worked on!&lt;/p&gt;
&lt;h5&gt;How A Project Is Made with Sanyam Khurana&lt;/h5&gt;
&lt;p&gt;Building an idea into a project seems like a lot of work and excitement right? You can do all sorts of crazy stuff with your code to make it as amazing as possible. Use all sorts of cool-tool in hope of making something out of it at the end. But this is where the problem lies. Diving into the sea of amusement and uncertainty never promises a good ending. And hence, my mentor &lt;a href="http://www.sanyamkhurana.com/"&gt;Sanyam Khurana&lt;/a&gt; and I sat down for my intervention in hope of structuring the tasks for good. And this is how a project begins. Sanyam with his experience in &lt;a href="https://github.com/curiouslearner"&gt;Open Source&lt;/a&gt; as well as industry taught me the importance of dividing tasks which should be atomic and should clearly define what we are trying to achieve in Plain-English. For example, when you are trying to make a blogging website, you don't create a pull request with all of the functionalities needed for the blog. First, think about the atomic tasks which can be done independently. Now create a series of these tasks (we call them tickets/issues/features). So, you have a ticket for, say, setting up pelican blog. Another for creating a theme for your blog. Another for adding analytics to your blog and so on.&lt;/p&gt;
&lt;p&gt;Now, you can also create boards or table with columns which define the state of which these tasks lies. A task may be in development or in testing or review phase. This makes it easier to vizualise what needs to be done, what has been done already and what tasks should be in focus currently. This methodology in a broader sense and proper framework with a lot of disciplines in action is known as Agile Software Development.&lt;/p&gt;
&lt;h5&gt;Dividing Project into Tasks&lt;/h5&gt;
&lt;p&gt;After learning much about how to proceed, I sketched out the way in which I can separate out the atomic features needed for the project. We're using Debian hosted &lt;a href="https://outreach-lab.debian.net/redmine/projects/new-contributor-wizard"&gt;Redmine&lt;/a&gt; for our project management and I started jotting down the issues, to begin with. Here are the issues which shape the beginning of the project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://outreach-lab.debian.net/redmine/issues/15"&gt;Create Design Guideline&lt;/a&gt; - The first issue in order to create a reference GUI design guideline for the application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://outreach-lab.debian.net/redmine/issues/16"&gt;Design GUI for Sign Up&lt;/a&gt; - Design mockup following the guideline to describe how Sign Up module should look like on the GUI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://outreach-lab.debian.net/redmine/issues/17"&gt;Design GUI for Sign In&lt;/a&gt; - Design mockup following the guideline to describe how Sign In module should look like on the GUI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://outreach-lab.debian.net/redmine/issues/5"&gt;Create Git repository for the project&lt;/a&gt; - Project mentor Daniel created this issue as the first step which marks the beginning of the project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://outreach-lab.debian.net/redmine/issues/4"&gt;Initializing skeleton KIVY application&lt;/a&gt; - After a dedicated repository has been created for our project, a KIVY application has to be setup which should also include tests, documentation, and changelog.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://outreach-lab.debian.net/redmine/issues/8"&gt;Create SignUp Feature&lt;/a&gt; - After the skeleton is setup, sign up modules can be implemented which should present a GUI to the user in order to create the account to access the application. This screen should be the first interaction with the user after they run the application for the first time.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://outreach-lab.debian.net/redmine/issues/9"&gt;Create SignIn Feature&lt;/a&gt; - If the user is already signed up for an account on the application, this screen will be the medium with which they can Sign In with the credentials.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://outreach-lab.debian.net/redmine/issues/10"&gt;Add a license to Project Repository&lt;/a&gt; - Being an open source project, picking up license is a very elaborative process where we have to also look at all the dependencies our application has and other parameters. Hence, this issues is more of a discussion which will conclude by adding a License file in the project repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These were some of the key issues which came up after my discussion with Sanyam (except creating git repo which Daniel kickstarted). These issues were enough to begin with and as we progress we can create more issues on Redmine. As part of the first couple of weeks of GSoC, I've already completed the first 3 design issues, I also wrote a &lt;a href="https://blog.shanky.xyz/gsoc-2018-week-1-and-2.html"&gt;blog&lt;/a&gt; explaining about my process and the outcome. So, for the third week, I started with initializing skeleton KIVY application.&lt;/p&gt;
&lt;h5&gt;The First Merge Request&lt;/h5&gt;
&lt;p&gt;&lt;img alt="KIVY APP" src="https://blog.shanky.dev/images/gsocweek3kivyapp.png"&gt;&lt;/p&gt;
&lt;p&gt;Don't be confused if you are a Github native, since we are using Debian hosted Gitlab (&lt;a href="https://salsa.debian.org/"&gt;called salsa&lt;/a&gt;), it has Merge Request in place of Pull Request.&lt;/p&gt;
&lt;p&gt;The issue which I was trying to solve in my first Merge Request was &lt;a href="https://outreach-lab.debian.net/redmine/issues/4"&gt;Initializing skeleton KIVY application&lt;/a&gt;. It was just to create a boilerplate from scratch so that development from now on would be smooth. I set out to achieve following things in my Merge Request&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add a KIVY application which can create a sample window with sample text on it to showcase that KIVY is working just fine&lt;/li&gt;
&lt;li&gt;Create the project structure to fit documentation, ui, tests and modules&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;pipenv&lt;/code&gt; support for virtual environment and dependency management&lt;/li&gt;
&lt;li&gt;Integrate &lt;code&gt;pylint&lt;/code&gt; to test Python code for PEP8 compliance&lt;/li&gt;
&lt;li&gt;Integrate &lt;code&gt;pytest&lt;/code&gt; and write tests for unit and integration testing&lt;/li&gt;
&lt;li&gt;Adding Gitlab CI support&lt;/li&gt;
&lt;li&gt;Add a &lt;code&gt;README.md&lt;/code&gt; file and write general description about the project and all it's components&lt;/li&gt;
&lt;li&gt;Add documentation for end user to help them easily run and explain all the features of the application&lt;/li&gt;
&lt;li&gt;Add documentation for developers to help them build the application from source&lt;/li&gt;
&lt;li&gt;Add documentation for contributors to share some of the best practices while contributing to this application&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here's the &lt;a href="https://salsa.debian.org/new-contributor-wizard-team/new-contributor-wizard/merge_requests/1"&gt;Merge Request&lt;/a&gt; which resulted in all of the above additions to the project. It was a lot of pain getting CI to work for the first time, but once you get a green tick, you know what ticks CI to work correctly. Throughout my development process Sanyam helped me with reviews and it finally got merged into the repository by Daniel.&lt;/p&gt;
&lt;h5&gt;Conclusion&lt;/h5&gt;
&lt;p&gt;This week kickstarted the main development process for &lt;strong&gt;New Contributor Wizard&lt;/strong&gt; and gave me a chance to learn about project/software management. I will be creating more issues and share about what I'm working in the next week's GSoC blog.&lt;/p&gt;</content><category term="GSoC"></category><category term="GSoC"></category><category term="Google"></category><category term="Debian"></category><category term="KIVY"></category><category term="Salsa"></category><category term="Gitlab"></category></entry><entry><title>Google Summer of Code 2018 with Debian - Week 1 and 2</title><link href="https://blog.shanky.dev/gsoc-2018-week-1-and-2.html" rel="alternate"></link><published>2018-05-28T00:00:00+05:30</published><updated>2018-05-30T00:00:00+05:30</updated><author><name>Shashank Kumar</name></author><id>tag:blog.shanky.dev,2018-05-28:/gsoc-2018-week-1-and-2.html</id><summary type="html">&lt;p&gt;GSoC 2018 has begun and for me, it is also a journey of exploring Debian organization. Here's a blog about what I learned during community bonding period and what I've done during the first couple of weeks.&lt;/p&gt;</summary><content type="html">&lt;p&gt;After I got the news of my selection in Debian for Google Summer of Code program, I've been exploring different domains in which one can contribute to Debian and hence making the community bonding phase as productive as it can get.&lt;/p&gt;
&lt;h5&gt;Community Bonding&lt;/h5&gt;
&lt;p&gt;For Debian, Mailing Lists are one of the primary means of communication among the contributors and maintainers of the community. It was also stated on the Debian's &lt;a href="https://wiki.debian.org/SummerOfCode2018/Projects"&gt;GSoC projects page&lt;/a&gt; that we students should be joining &lt;a href="https://lists.debian.org/debian-outreach/"&gt;debian-outreach&lt;/a&gt;, &lt;a href="https://lists.debian.org/debconf-announce/"&gt;debconf-announce&lt;/a&gt;, &lt;a href="https://lists.debian.org/debian-announce/"&gt;debian-announce&lt;/a&gt; and &lt;a href="https://lists.debian.org/debian-devel-announce/"&gt;debian-devel-announce&lt;/a&gt; lists. debian-outreach list is for the communications mostly related Gooogle Summer of Code, Rail Girls Summer of Code and similar programs. One can always find lists as per their interests from the &lt;a href="https://lists.debian.org/"&gt;Debian Mailing Lists&lt;/a&gt; index.&lt;/p&gt;
&lt;p&gt;Similarly, #debian-outreach and #debconf-discuss are the IRC few of the &lt;a href="https://wiki.debian.org/IRC"&gt;Debian IRC&lt;/a&gt; channels which were recommended. And is mostly filled with valuable conversations to follow. Even if you don't know where to begin in order to contribute, simply ask!&lt;/p&gt;
&lt;p&gt;Before the Coding Phase, we had a &lt;a href="https://meet.jit.si"&gt;Jitsi&lt;/a&gt; call with the mentors and students under one room in order to discuss and plan ahead. We also agreed on having a weekly call in the same room, the schedule for which was carefully picked up which took everyone's timezone into account. &lt;a href="http://www.sanyamkhurana.com/"&gt;Sanyam Khurana&lt;/a&gt;, who is one of my mentors for this project is the only person I've known among all my mentors and fellow students from before. I've been learning from his work since we started meeting during meetups in Delhi NCR and he's generous enough to spare additional hours from his day in which we can meet and have healthy discussions about the project.&lt;/p&gt;
&lt;h5&gt;Design - The Beginning Of Everything&lt;/h5&gt;
&lt;p&gt;Since we are 3 folks working on the same project, mentors had a very important task of dividing modules among students which had to be atomic. Modules which were allocated were not final and open to discussion. These modules only gave an idea about the feature to be implemented, it's up to the student to plan accordingly with the help of the mentors and proceed with actual implementation. I began with working on the Design of the application.&lt;/p&gt;
&lt;h5&gt;Design Guidelines - The Palette&lt;/h5&gt;
&lt;p&gt;I like &lt;a href="https://coolors.co/"&gt;Coolors&lt;/a&gt; and have been using it for quite some time now. It's a go-to tool when you are exploring color palette for your project. I explored a bit and decided to go with 4 colors. 2 Solids and 2 variants of the original colors of my choice which can be seen below. Then I decided to pick fonts for the application from Google Fonts as it provides all the proper guidelines for the different use cases and licensing. I went ahead with &lt;a href="https://fonts.google.com/specimen/Anton"&gt;Anton&lt;/a&gt; and &lt;a href="https://fonts.google.com/specimen/Varela+Round"&gt;Varela Round&lt;/a&gt;, both of which come with an &lt;a href="http://scripts.sil.org/cms/scripts/page.php?site_id=nrsi&amp;amp;id=OFL_web"&gt;Open Font License&lt;/a&gt;. I've also shared the raw SVG design in the blog which we'll also be using for our development process. In order for the font in the SVG to work, simply download both the fonts mentioned above and install them in your OS's font directory.&lt;/p&gt;
&lt;p&gt;&lt;img alt="New Contributor Wizard - Color Palette" src="https://blog.shanky.dev/images/NewContributorWizardPalette.png"&gt;&lt;/p&gt;
&lt;p&gt;SVG Version of the above poster to play can be found &lt;a href="/images/NewContributorWizardPalette.svg"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;Design Guidelines - The Gradient&lt;/h5&gt;
&lt;p&gt;While contributing to Open Source Projects and Communities, it's important to embrace it with the rich history and resources they have given us mostly with a &lt;a href="https://opensource.org/licenses"&gt;&lt;code&gt;Go-Nuts&lt;/code&gt; license&lt;/a&gt;. This is the reason why I chose &lt;a href="https://inkscape.org/"&gt;Inkscape&lt;/a&gt; for all my designing work. The beauty of picking up variants of colors is you can mix and match them in order to create beautiful gradients. So, I did! I used the two variants of the Blueish-like color selected earlier and created the gradient which can be seen below. The gradient is linear and two colors are selected for horizontal ends of the box.&lt;/p&gt;
&lt;p&gt;&lt;img alt="New Contributor Wizard - Gradient" src="https://blog.shanky.dev/images/NewContributorWizardGradient.png"&gt;&lt;/p&gt;
&lt;p&gt;Now to create the main dashboard, I just needed a little imagination about which end point would be best for which gradient and here's the result. SVG version to play can be found &lt;a href="/images/NewContributorWizardDashboardGradient.png"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="New Contributor Wizard - Dashboard Gradient" src="https://blog.shanky.dev/images/NewContributorWizardDashboardGradient.png"&gt;&lt;/p&gt;
&lt;h5&gt;GUI - The Sign Up&lt;/h5&gt;
&lt;p&gt;Sign Up will probably be the first screen the user encountered on the application after installation. Here, user shares few important details about themselves which will be used to create an instance and persist user activity throughout the application. Using the same Dashboard I created the Sign Up screen as seen below. SVG version to play can be found &lt;a href="/images/NewContributorWizardSignUp.svg"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="New Contributor Wizard - SignUp" src="https://blog.shanky.dev/images/NewContributorWizardSignUp.png"&gt;&lt;/p&gt;
&lt;p&gt;Additionally, I used &lt;a href="https://www.flaticon.com/free-icon/drop-down-arrow_60995#term=down%20arrow&amp;amp;page=1&amp;amp;position=20"&gt;Down Arrow Icon&lt;/a&gt; and &lt;a href="https://www.flaticon.com/free-icon/eye_23912#term=eye&amp;amp;page=1&amp;amp;position=15"&gt;Eye Icon&lt;/a&gt; in the design both of which are licensed with &lt;a href="http://creativecommons.org/licenses/by/3.0/"&gt;Creative Commons&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;GUI - The Log In&lt;/h5&gt;
&lt;p&gt;After when the user has signed up, they can Log In henceforth using their email address and password shared during the Sign Up process. You might notice that the partition between the Blackish and Blueish segment changes size between Sign Up and Log In. It would look cool if we are able to animate the size when user switches between the screens. SVG version to play of the Log In design can be found &lt;a href="/images/NewContributorWizardLogIn.svg"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="New Contributor Wizard - LogIn" src="https://blog.shanky.dev/images/NewContributorWizardLogIn.png"&gt;&lt;/p&gt;
&lt;h5&gt;GUI - The Dashboard&lt;/h5&gt;
&lt;p&gt;Finally, after the user is authenticated, they are taken to the main screen of the application I'm calling &lt;code&gt;Dashboard&lt;/code&gt;. On the Dashboard, one can find all the tutorials for the technology or concept available and also the tools mentioned. I extended the design to include a panel on the left segment. This panel contains options to view and modify configurations for the application. The &lt;a href="https://www.flaticon.com/free-icon/user-avatar-main-picture_69442#term=profile&amp;amp;page=1&amp;amp;position=70"&gt;Profile Icon&lt;/a&gt; can be used to give user option to change details about themselves. The &lt;a href="https://www.flaticon.com/free-icon/painter-palette_61092#term=paint&amp;amp;page=1&amp;amp;position=10"&gt;Paint Icon&lt;/a&gt; can be used to allow the user to change the application theme. The &lt;a href="https://www.flaticon.com/free-icon/settings-work-tool_70367#term=gear&amp;amp;page=1&amp;amp;position=4"&gt;Gear Icon&lt;/a&gt; can be used to provide additional application specific settings like language choice, updates etc. SVG version to play of the design below can be found &lt;a href="/images/NewContributorWizardDashboard.svg"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="New Contributor Wizard - Dashboard" src="https://blog.shanky.dev/images/NewContributorWizardDashboard.png"&gt;&lt;/p&gt;
&lt;h5&gt;Conclusion&lt;/h5&gt;
&lt;p&gt;These designs will now be used to implement the GUI of the application. The designs are open to modification to fit the need of the application. We're using a Debian hosted &lt;a href="https://outreach-lab.debian.net/redmine/projects/new-contributor-wizard"&gt;Redmine&lt;/a&gt; to manage our project and I've created few issues to implement design in code with proper tests and documentation. This is the highlight of what I've been doing for the first couple of weeks and I'll continue to share updates via my blog in future as well.&lt;/p&gt;</content><category term="GSoC"></category><category term="GSoC"></category><category term="Google"></category><category term="Debian"></category><category term="Inkscape"></category></entry><entry><title>Google Summer of Code 2018 - Blog 2 - The Application Task and Results</title><link href="https://blog.shanky.dev/gsoc-2018-blog-2-the-application-task-and-results.html" rel="alternate"></link><published>2018-04-30T00:00:00+05:30</published><updated>2018-04-30T00:00:00+05:30</updated><author><name>Shashank Kumar</name></author><id>tag:blog.shanky.dev,2018-04-30:/gsoc-2018-blog-2-the-application-task-and-results.html</id><summary type="html">&lt;p&gt;While preparing for Google Summer of Code, I had to complete Application Task provided by the mentors. In this blog I explained about the same, announcement of GSoC 2018 students and my acceptance into the program.&lt;/p&gt;</summary><content type="html">&lt;p&gt;In my earlier blog &lt;a href="https://blog.shanky.xyz/gsoc-2018-blog-1-from-preparations-to-debian-proposal.html"&gt;&lt;strong&gt;Google Summer of Code 2018 - Blog 1 - From Preparations to Debian to Proposal&lt;/strong&gt;&lt;/a&gt;, I shared few highlights from my life which inspired me to learn Python and taught me good programming practices in general. And how I got to know about Google Summer of Code program and completed &lt;a href="https://blog.shanky.xyz/PDFs/GSoC_2018_proposal_for_Debian7.pdf"&gt;&lt;strong&gt;my final proposal&lt;/strong&gt;&lt;/a&gt; for Debian. In this blog, I'll share about the application task which was to be completed alongside the proposal.&lt;/p&gt;
&lt;h5&gt;Application Task - Introduction&lt;/h5&gt;
&lt;p&gt;I started with probing through GSoC 2016 organizations and their mailing lists, wikis and blogs to find out whether they are preparing for this year as well. For some of them, I was already aware as I have been contributing to upstream projects of these organizations on Github as well. Also, I was learning about Web Extensions while the process and also gave a &lt;a href="https://blog.shanky.xyz/mozamu-my-first-visit-to-amu-and-first-talk-for-mozilla.html"&gt;talk for Mozilla in Aligarh Muslim University&lt;/a&gt;. So, I got interested when I saw that 2 of the project ideas from Debian lies in the domain of creating browser extensions. I chose to work on one of the ideas which needed me to create an extension which is not supported in newer browsers because of the lack of web extension support on their source code. I tried to wrap my head around the idea and because I could not find proper documentation on legacy code or a mentor in given time, I had to pivot to another idea.&lt;/p&gt;
&lt;p&gt;This is when I saw &lt;a href="https://wiki.debian.org/SummerOfCode2018/Projects/WizardForStudentsAndNewInterns"&gt;Wizard/GUI helping students/interns apply and get started&lt;/a&gt; by mentor &lt;a href="https://danielpocock.com/"&gt;Daniel Pocock&lt;/a&gt; and because of my love for Python, I chose to work on this idea, preparing Proposal and Application Task. The idea was to provide all the tools of trade necessary for open source contribution with tutorial and references.&lt;/p&gt;
&lt;h5&gt;Application Task - Design&lt;/h5&gt;
&lt;p&gt;I thought of a rough roadmap of what I wanted to achieve through the application task both Graphical (on UI end) and Operational (on functional end). For the UI, I thought of providing a nice sidebar with options of changing through topics and main screen where the content would appear on the chosen topic. So I set out to create the design on &lt;a href="https://inkscape.org/"&gt;Inkscape&lt;/a&gt; using &lt;a href="https://design.ubuntu.com/"&gt;Ubuntu Design Guidelines&lt;/a&gt;. Here's what I ended up with&lt;/p&gt;
&lt;p&gt;&lt;img alt="GUI Design - Communications" src="https://blog.shanky.dev/images/communication.png"&gt;&lt;/p&gt;
&lt;p&gt;In the above design, you can see sidebar containing menu on the left-hand side. I have placed the menu options based on their increasing difficulty of understanding. On the right-hand side, you can see the main screen currently showing content from the selected option on the left. Right now it is showcasing 'Communication' which can be a segment in which users will understand the importance of Mailing list and IRC. There can also be an option of subscribing to Mailing Lists or channels on IRC via the software itself.&lt;/p&gt;
&lt;p&gt;&lt;img alt="GUI Design - CLI" src="https://blog.shanky.dev/images/cli.png"&gt;&lt;/p&gt;
&lt;p&gt;In another design above, you can see a user is underway leaning how Command Line Interfaces work with UNIX commands. To make it more interactive, the user can be asked to perform certain tasks like running a command on the terminal and submitting output in order to proceed to next level.&lt;/p&gt;
&lt;h5&gt;Application Task - Implementation&lt;/h5&gt;
&lt;p&gt;In the project idea, Daniel mentioned the use of PyQt in order to work on the application task, so I did. PyQt5 was the latest of the stable version of PyQt which can be used and from the official documentation, it was said to be &lt;a href="http://pyqt.sourceforge.net/Docs/PyQt5/pyqt4_differences.html"&gt;more 'Pythonic'&lt;/a&gt; than it's predecessor PyQt4. Also, I found a very good tutorial by Jan Bodnar on &lt;a href="http://zetcode.com/gui/pyqt5/"&gt;ZedCode&lt;/a&gt; which helped me understand the basics of PyQt5 API before I can take help from official documentation.&lt;/p&gt;
&lt;p&gt;According to project idea, I had to implement any one of the features for which I choose to work with &lt;a href="https://ssd.eff.org/en/module/introduction-public-key-cryptography-and-pgp"&gt;PGP keys&lt;/a&gt;. The user would be able to manage their PGP keys pairs i.e. creating, exporting, encrypting and decrypting messages using PGP keys. After I was done, this is what the application task, which I named "Open Source Buddy" can do&lt;/p&gt;
&lt;video width="400" controls&gt;
  &lt;source src="https://salsa.debian.org/realslimshanky-guest/Open-Source-Buddy/raw/master/demo.mp4" type="video/mp4"&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;

&lt;p&gt;Daniel also suggested some of the &lt;a href="https://wiki.debian.org/Teams/Outreach/Tools"&gt;FOSS tools and platform&lt;/a&gt; which we should be using for the development of the application. Following the guidelines, I used &lt;a href="https://salsa.debian.org"&gt;Salsa&lt;/a&gt;, which is a self-hosted GitLab on Debian server to host the application task. The entire source code with designs and demo video can be seen &lt;a href="https://salsa.debian.org/realslimshanky-guest/Open-Source-Buddy"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This was just one of the functionalities and workflow which I proposed in my &lt;a href="PDFs/GSoC_2018_proposal_for_Debian7.pdf"&gt;Final GSoC Proposal&lt;/a&gt;) to Debian.&lt;/p&gt;
&lt;h5&gt;GSoC 2018 - Results&lt;/h5&gt;
&lt;p&gt;As promised by GSoC on &lt;a href="https://twitter.com/gsoc/status/978671996266414080"&gt;Twitter&lt;/a&gt;, results were announced on 23rd April 2018 at 9:30 IST (16:00 UTC). With marginally less breath and heartbeats I went on to the official website to checkout the results. And there it was!&lt;/p&gt;
&lt;p&gt;&lt;img alt="GSoC 2018 Result" src="https://blog.shanky.dev/images/gsoc2018result.png"&gt;&lt;/p&gt;
&lt;p&gt;My proposal got accepted for Debian, I for Google Summer of Code 2018 and the &lt;a href="https://summerofcode.withgoogle.com/projects/#5056989357408256"&gt;website confirmed&lt;/a&gt; it with my username and other details. I also received an official mail from Google regarding the same with other details regarding the program. I'm very excited about the journey and would be sharing what I learn and accomplish along the way. I would like to thank all the mentors who chose me for the responsibility of completing the project.&lt;/p&gt;</content><category term="GSoC"></category><category term="GSoC"></category><category term="Google"></category><category term="Debian"></category><category term="PyQt"></category></entry><entry><title>Google Summer of Code 2018 - Blog 1 - From Preparations to Debian to Proposal</title><link href="https://blog.shanky.dev/gsoc-2018-blog-1-from-preparations-to-debian-proposal.html" rel="alternate"></link><published>2018-03-31T00:00:00+05:30</published><updated>2018-04-02T00:00:00+05:30</updated><author><name>Shashank Kumar</name></author><id>tag:blog.shanky.dev,2018-03-31:/gsoc-2018-blog-1-from-preparations-to-debian-proposal.html</id><summary type="html">&lt;p&gt;Being an open source contributor for more than a year I decided to get the best out of me by taking part in one of the biggest internship programs in the world. Here's how I started!&lt;/p&gt;</summary><content type="html">&lt;p&gt;I got to know about Open Source and community efforts during my first PyDelhi meetup close to a couple of years ago. And my journey began right from there. So in order to understand my preparation for GSoC, everything that has impacted me over the last couple of years is important. Here in this blog, I share what I learned to be able to work for the idea posted by Debian and submitting proposal afterward.&lt;/p&gt;
&lt;h5&gt;PyDelhi - The Beginning&lt;/h5&gt;
&lt;p&gt;&lt;img alt="PyDelhi" src="https://blog.shanky.dev/images/pydelhi.png"&gt;&lt;/p&gt;
&lt;p&gt;After starting with Python I came across the community named &lt;a href="https://pydelhi.org/"&gt;PyDelhi&lt;/a&gt; which promotes Python programming language by organizing meetups and conferences. It is entirely volunteer-run and I also became active after attending my &lt;a href="https://www.meetup.com/pydelhi/events/pkdrklyvkbfc/"&gt;first ever meetup&lt;/a&gt;. One of the best Python books I was recommended by few folks was &lt;a href="https://pymbook.readthedocs.io/"&gt;&lt;strong&gt;Python for You and Me&lt;/strong&gt;&lt;/a&gt; by &lt;a href="https://kushaldas.in/"&gt;&lt;strong&gt;Kushal Das&lt;/strong&gt;&lt;/a&gt;. I met folks who were working on cool projects using Python and I created one myself for PyDelhi named &lt;a href="http://github.com/realslimshanky/PyDelhi-Bot"&gt;PyDelhi Bot&lt;/a&gt; to serve &lt;a href="https://t.me/pydelhigroup"&gt;Telegram Volunteer Group&lt;/a&gt;. Later, I went on to give a talk during PyDelhi Conference 2017 which landed on &lt;a href="https://www.youtube.com/watch?v=J6aZlUzxL5w"&gt;YouTube&lt;/a&gt; and I have been a volunteer, speaker, contributor and co-organizer for PyDelhi ever since. I volunteered for &lt;a href="https://in.pycon.org/2016/"&gt;PyCon India 2016&lt;/a&gt;, was in Core Organizing team for &lt;a href="https://in.pycon.org/2017/"&gt;2017&lt;/a&gt; and volunteering for &lt;a href="https://in.pycon.org/2018/"&gt;2018&lt;/a&gt; as well. My love for Python grew from PyDelhi and it became my primary programming language. Soon, I met various communities promoting Open Source software and methodologies and volunteered for them as well.&lt;/p&gt;
&lt;h4&gt;Durgapur Linux User Group - Summer Training&lt;/h4&gt;
&lt;p&gt;&lt;img alt="DGPLUG" src="https://blog.shanky.dev/images/dgplug.png"&gt;&lt;/p&gt;
&lt;p&gt;After looking more into Kushal Das' blog, I got to know about &lt;a href="https://dgplug.org"&gt;DGPLUG&lt;/a&gt;. DGPLUG organizes one of the best &lt;a href="https://dgplug.org/summertraining17/"&gt;summer training&lt;/a&gt; which I was blessed to be a part of in 2016 and later in 2017 (to fill knowledge gaps). Training was carried on IRC which is always better so that folks with not-so-good internet reception can also benefit. The training started assuming everyone should learn from Zero and teaches all the basics following the &lt;a href="https://dgplug.org/summertraining17/#objectives"&gt;objectives&lt;/a&gt; which a developer should know in order to write code and contribute to open source in the best way possible. &lt;a href="https://dgplug.org/summertraining17/#guest-sessions"&gt;Guest sessions&lt;/a&gt; were one of the important sessions in which we got to interact with community veterans and industry leaders. Guests shared their experiences with the technologies they were working on and we can ask them questions if we had any doubt regarding it. The entire session was recorded and the logs were uploaded for someone who couldn't be online.&lt;/p&gt;
&lt;p&gt;During the training, some important things which I learned were by the &lt;a href="http://www.shakthimaan.com/"&gt;Shakti Kanan&lt;/a&gt; sessions as follows&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.shakthimaan.com/downloads/glv/presentations/communication-guidelines.pdf"&gt;Communication Guidelines&lt;/a&gt; - I got to know about various communication platforms like IRC and Mailing Lists and what are the advantages and disadvantages of each of them has. It was important to learn when should be using those and how. &lt;a href="https://dgplug.org/irclogs/mbuf_1stclass.log"&gt;Logs&lt;/a&gt; to session in which it was discussed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.shakthimaan.com/downloads/glv/presentations/mailing-list-etiquette.pdf"&gt;Mailing List Etiquette&lt;/a&gt; - In this session, I got to learn what are the suggested ways in which we should be using Mailing Lists and proper format to draft mails. &lt;a href="https://dgplug.org/irclogs/mbuf_1stclass.log"&gt;Logs&lt;/a&gt; to session in which it was discussed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.shakthimaan.com/downloads/glv/presentations/i-want-2-do-project-tell-me-wat-2-do.pdf"&gt;I Want To Do Project, Tell Me What To Do&lt;/a&gt; - Another important session to teach what are the ways in which we should start working on a project of our own or contribute to upstream projects. This tells us the importance of a mentor and how we can find one for ourselves. &lt;a href="https://dgplug.org/irclogs/mbuf_2ndclass.log"&gt;Logs&lt;/a&gt; to session in which it was discussed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This was a fresh start for me in the path of becoming a good developer. This opened a lot of new ways to interact and collaborate with Open Source communities around the world. (If above links to presentation doesn't work use these - &lt;a href="PDFs/communication-guidelines.pdf"&gt;Communication Guidelines&lt;/a&gt;, &lt;a href="PDFs/mailing-list-etiquette.pdf"&gt;Mailing List Etiquette&lt;/a&gt; and &lt;a href="PDFs/i-want-2-do-project-tell-me-wat-2-do.pdf"&gt;I Want To Do Project, Tell Me What To Do&lt;/a&gt;)&lt;/p&gt;
&lt;h4&gt;Google Summer of Code - Before The Proposal&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Google Summer of Code" src="https://blog.shanky.dev/images/GSoC-icon-192.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://summerofcode.withgoogle.com"&gt;Google Summer of Code&lt;/a&gt; has been an exciting opportunity for the folks willing to contribute to upstream Open Source projects and being my first and last (I graduate this year) time participating, I'm willing to work with the best I've got and learn along the way. Starting from reaching out to different organizations and probing through the idealist. It's important here to look into the idea in the domain of technologies one is working with. This way it's easier to complete application tasks before, and complete the objectives with good quality code during the internship period.&lt;/p&gt;
&lt;p&gt;Since this was my first time, I decided to go through the &lt;a href="https://google.github.io/gsocguides/student"&gt;Student Guide&lt;/a&gt; for GSoC and follow the prerequisites needed order to participate. After signing up and submitting my &lt;a href="https://developers.google.com/open-source/gsoc/help/proof-of-enrollment"&gt;Proof of Enrollement&lt;/a&gt;, one is free to focus on finding a suitable organization, reading through the idealist and working to complete application tasks given by the mentors.&lt;/p&gt;
&lt;h4&gt;Debian - The Spark&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Debian" src="https://blog.shanky.dev/images/debian.png"&gt;&lt;/p&gt;
&lt;p&gt;The time GSoC idea list went live I was learning about Web Extensions and coincidently Debian had 2 projects who's end goal was to create Browser Extensions. So I got excited about them and started with Debian's &lt;a href="https://wiki.debian.org/SummerOfCode2018/ProjectProposals/CreateASuccessorToTelifyUsingWebExtensions"&gt;Create a successor to the Telify plugin using WebExtensions&lt;/a&gt;. Because of not being able to find a mentor who could help me guide through legacy Telify code I was sure I will not able to complete application task in time. So I pivoted, and there it was, &lt;a href="https://wiki.debian.org/SummerOfCode2018/Projects/WizardForStudentsAndNewInterns"&gt;Wizard/GUI helping students/interns apply and get started&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My mind exploded with the ideas and the possibilities of feature set which can be incorporated into this project. 'Open Source Buddy' came to my mind while naming the application for the task and I began with the UI design using Inkscape which I was going to code eventually. I'll be writing a blog soon focusing entirely on the application task I created with all the technical details as well. One can find the source code with a demo video for the same on &lt;a href="https://salsa.debian.org/realslimshanky-guest/Open-Source-Buddy"&gt;Salsa&lt;/a&gt;. The project idea was to create a GUI application which can help students or interns get started with their Open Source contributions. The application will guide through the tools of the trade like Git, Github, GnuPG etc and explain the importance of communication via IRC, Mailing List etc. I planned to use PyQt as suggested on the idea description to begin with the application task. More on this later.&lt;/p&gt;
&lt;p&gt;After selecting the project and being absolutely sure that I'll work with the best I've got for this project in the internship I began probing more about the organization on how to do things the right way. I came across &lt;a href="https://danielpocock.com/"&gt;Daniel Pocock&lt;/a&gt;'s blog (who is also my mentor for this project) on &lt;a href="https://danielpocock.com/getting-selected-for-google-summer-of-code-2016"&gt;Want to be selected for Google Summer of Code 2016?&lt;/a&gt; mentioned in the description of the project idea I selected, shaped my views in order to understand the project better. Reading more about Debian and how to join the Debian community from a dedicated &lt;a href="https://wiki.debian.org/SummerOfCode2018"&gt;Debian GSoC&lt;/a&gt; page, I did following things&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Mailing List - I joined &lt;a href="https://lists.debian.org/debian-outreach/"&gt;Debian Outreach&lt;/a&gt; which was a dedicated list for discussion of Debian's participation in internship-like programs, such as Outreachy, Google Summer of Code, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IRC - In order to join &lt;a href="https://wiki.debian.org/IRC"&gt;Debian channels&lt;/a&gt; on IRC, I configured &lt;a href="https://www.oftc.net/"&gt;OFTC&lt;/a&gt; on &lt;a href="https://wiki.znc.in/ZNC"&gt;ZNC&lt;/a&gt; which I was already using for Freenode (#pydelhi, #dgplug, #pyconindia, #python-gsoc) and Mozilla (#introduction, #development). This way I don't lose any of the messages when I'm not online and can connect with ZNC using any of the clients on Laptop or Mobile.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wiki - I signed up for Debian Wiki account and was blacklisted because my email address included &lt;code&gt;.xyz&lt;/code&gt; domain. Thanks to &lt;a href="https://wiki.debian.org/SteveMcIntyre"&gt;Steve McIntyre&lt;/a&gt; and &lt;a href="https://wiki.debian.org/PaulWise"&gt;Paul Wise&lt;/a&gt; from the &lt;a href="https://wiki.debian.org/Teams/DebianWiki"&gt;Wiki Admin Team&lt;/a&gt; for helping me out. I finally created my account and afterward, I created my &lt;a href="https://wiki.debian.org/ShashankKumar"&gt;own wiki page&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;The Proposal Deadline&lt;/h4&gt;
&lt;p&gt;March 27, 2018 - 21:30 (IST) was the deadline for proposal submission. Proposal showcases what a participant understands the project idea and can elaborate on how they plan to create it. It also showcases more about participant's past work and experiences mostly related to the same technology they'll be using. Student Guide contains &lt;a href="https://google.github.io/gsocguides/student/writing-a-proposal"&gt;few general guidelines&lt;/a&gt; which tells about important points that should be included in the proposal. Apart from these, it's always a good idea to talk with mentors what they think should be included in the proposal. I took my time (close to 2 days) in order to research and come up with the best feature set and methodologies which can be used to make an amazing project. After the review process, here's the &lt;a href="PDFs/GSoC_2018_proposal_for_Debian7.pdf"&gt;&lt;strong&gt;Final GSoC Proposal&lt;/strong&gt;&lt;/a&gt; which I submitted.&lt;/p&gt;
&lt;h4&gt;What's Next!&lt;/h4&gt;
&lt;p&gt;I plan on integrating the Open Source Buddy with pylint, pytest and working more on GUI and PyQT so that if I'm selected for the project, using the tools of trade would be easy and I can focus more on the features. This was my experience till the project submission in brief. I'm planning to continue this GSoC blog series in order to share all that I learn along the way. Next up, a blog explaining how I completed application task - &lt;a href="https://salsa.debian.org/realslimshanky-guest/Open-Source-Buddy"&gt;Open Source Buddy&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;IMPORTANT UPDATE&lt;/h4&gt;
&lt;p&gt;I got selected for Google Summer of Code 2018 under Debian and my project is &lt;a href="https://summerofcode.withgoogle.com/projects/#5056989357408256"&gt;Wizard/GUI helping students/interns apply and get started&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've also added second blog in the series titles &lt;a href="https://blog.shanky.xyz/gsoc-2018-blog-2-the-application-task-and-results.html"&gt;&lt;strong&gt;The Application Task and Results&lt;/strong&gt;&lt;/a&gt;. Check it out!&lt;/p&gt;</content><category term="GSoC"></category><category term="GSoC"></category><category term="Google"></category><category term="Debian"></category><category term="PyDelhi"></category><category term="DGPLUD"></category><category term="Python"></category><category term="PyQt"></category></entry></feed>